version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: archinsight_postgres_prod
    environment:
      POSTGRES_DB: archinsight
      POSTGRES_USER: archinsight_prod
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - archinsight_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U archinsight_prod"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15-community
    container_name: archinsight_neo4j_prod
    environment:
      NEO4J_AUTH: neo4j/${NEO4J_PASSWORD}
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 2G
      NEO4J_dbms_memory_pagecache_size: 1G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    ports:
      - "7474:7474"
      - "7687:7687"
    networks:
      - archinsight_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7474"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: archinsight_redis_prod
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - archinsight_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: archinsight_backend_prod
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://archinsight_prod:${POSTGRES_PASSWORD}@postgres:5432/archinsight
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - CORS_ORIGINS=${CORS_ORIGINS}
    volumes:
      - ./data/uploads:/app/uploads
      - ./data/cache:/app/cache
      - ./data/models:/app/data/models
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    networks:
      - archinsight_network
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: archinsight_frontend_prod
    environment:
      - VITE_API_BASE_URL=${API_BASE_URL}
      - VITE_APP_NAME=ArchInsight
    ports:
      - "80:80"
      - "443:443"
    networks:
      - archinsight_network
    depends_on:
      - backend
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: archinsight_nginx_prod
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./data/uploads:/var/www/uploads:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - archinsight_network
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  # ML Service (Optional)
  ml_service:
    build:
      context: ./backend
      dockerfile: Dockerfile.ml
    container_name: archinsight_ml_prod
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://archinsight_prod:${POSTGRES_PASSWORD}@postgres:5432/archinsight
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./data/models:/app/data/models
      - ./data/cache:/app/cache
      - ./logs:/app/logs
    networks:
      - archinsight_network
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

volumes:
  postgres_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  redis_data:
    driver: local

networks:
  archinsight_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
